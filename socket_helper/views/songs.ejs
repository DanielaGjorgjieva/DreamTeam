
<html>
    <head>
        <link rel="stylesheet" href="../../css/song-catalog-style.css">
        <link rel="stylesheet" href="../../css/song-catalog-mobile-style.css">
        <link rel="stylesheet" href="../../css/style.css">
        <link rel="stylesheet" href="../../css/style-mobile.css">
        <link rel="stylesheet" href="../../css/song-player-mobile-style.css">
        <link rel="stylesheet" href="../../css/song-player-style.css">
        <link rel="stylesheet" href="../../css/song-upload-style.css">
        <link rel="stylesheet" href="../../css/song-upload-mobile-style.css">
        <title></title>
    </head>
    <body onload="init()">
        <header class="logo-header">
            <img src="./images/header.png" alt="">
        </header>
        <p class="socket-info"></p>
        <form id="searchform">
            <input type="text" name="search">
        </form>
        <div class="all-content">
            <main>
                
            </main>
            

            <!-- insert element here -->
           
                <nav class="main-page-list-target">
                    <h1 class="main-page-header">Navigation:</h1>
                    <ul id="navbar">
                        <li><a id="home-link" name="home" data-hash="" href="/songs/home"> Home</a></li>
                        <li><a id="song-link" name="songs" data-hash="#songs" href="/songs"> Song Catalog</a></li>
                        <li><a id="upload-link" name="upload" data-hash="#upload" href="/songs/upload"> Song upload</a></li>
                        <li><a id="remote-link" name="remote" href="/player/remote">Remote Player</a></li>
                    </ul>
                </nav>
                <aside class="main-page-list-target">
                    <h1 id="dynamic-header" class="main-page-header">Genres:</h1>
                    <ul id="artistbar">
<% function add_side_bar(filter) {
                    let set = [];
                    result.forEach((song) => {
                        for (const [key, value] of Object.entries(song)) {
                            if ((key == "artist") && (filter == "artist")) {
                                if (!set.includes(value)) {
                                    set.push(value)
                                }
                            } else if ((key == "album") && (filter == "album")) {
                                if (!set.includes(value)) {
                                    set.push(value);
                                }
                            } else if ((key == "genre") && (filter == "genre")) {
                                if (!set.includes(value)) {
                                    set.push(value);
                                }
                            }
                        }
                    });
            
                        let add = ``
            
                        if(filter === "artist") {
                            set.forEach((artist) => {
                                add += `<li><a class="artistlink" href="songtable?artist=${artist}">${artist}</a></li>`;
                            })
                        } else if (filter === "album") {
                            set.forEach((album) => {
                                add += `<li><a class="albumlink" href="songtable?album=${album}">${album}</a></li>`;
                            })
                        }   else if (filter === "genre") {
                            set.forEach((genre) => {
                                add += `<li><a class="genrelink" href="/songs?genre=${genre}">${genre}</a></li>`;
                            })
                        }
            
                        return add;
                        
                    } %>
<%- add_side_bar("genre") %>
</ul>
</aside>
</div>
    
<footer>
    <div class="all-content">
    <main>
    <div id="player">

        <header>
            <p class="title" id="">Living on a Prayer - Bon Jovi</p>
        </header>

        <section class="seek">
            <p class="remain">1:04</p>
            <progress min="0" max="3" value="1"></progress>
            <p class="elapsed">3:12</p>
        </section>
        
        <section class="play buttons">
            <button id="prev" class="small"></button>
            <button id="play"></button>
            <button id="pause"></button>
            <button id="next" class="small"></button>
        </section>
        
        <aside class="volume">
            <button id="mute"></button>
            <button id="loud"></button>
            <button id="low"></button>
            <input id="volumebar" type="range" value="1" max="1" min="0" step="0.1"></input>
        </aside>
        <!-- This is the hidden audio element which will play your songs
        controlled from the #player buttons -->
        <audio id="player-audio" style="display:none"></audio>
    </div>
    </main>
</div>
</footer>

<!-- Script where the init_player function is implemented -->

<script src="/socket.io/socket.io.js"></script>
<script src="js/script.js"></script>
<script src="js/ajax.js"></script>
<script src="js/ejs.min.js"></script>
<script src="js/views.js"></script>
<script src="js/init.js"></script>

<script>
    //This function will call the init_player function passing a test playlist
    //You are welcome to change the playlist

    function init() {
        
        // render_player();
        upload_redirect();
        // delete_redirect();
        // init_search();
        init_listeners();
        searchform();
        init_socket();

        
            // let songs = ['music/one.mp3','music/two.mp3','music/three.mp3','music/four.mp3','music/five.mp3','music/seven.mp3','music/six.mp3'];
            // localStorage.setItem(songs, "0");

            // //TODO read the browser address bar parameter src (Task 4)


            // init_player(songs, true);
        let songs = ["music/one.mp3"];
        let dom = document.getElementById("player");
        init_player_with_playlist(dom, "pl", songs)
    }
</script>

</body>
</html>